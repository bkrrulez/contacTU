stages:
  - deploy
  - rollback
  - cleanup

variables:
  SSH_PRIVATE_KEY: $SSH_PRIVATE_KEY
  SERVER_IP: 128.131.20.58
  APP_PATH: /app/contactu_app
  DEPLOY_USER: deploy
  BACKUP_PATH: /app/contacTU_backup_gitlab
  IMAGE_NAME: yourdockerhubusername/contactu_app

before_script:
  - apk add --no-cache openssh-client bash git docker-compose
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts

deploy_to_server:
  stage: deploy
  script:
    - |
      ssh $DEPLOY_USER@$SERVER_IP "
        set -e

        echo '>>> Backing up existing environment and data'

        mkdir -p $BACKUP_PATH
        TIMESTAMP=\$(date +%Y%m%d%H%M%S)
        BACKUP_DIR=\"$BACKUP_PATH/backup_\$TIMESTAMP\"
        mkdir -p \"\$BACKUP_DIR\"

        # Backup .env file
        cp $APP_PATH/.env \"\$BACKUP_DIR/.env.backup\"

        # Backup Docker volumes (assuming named volume 'contacTU_data')
        docker run --rm -v contacTU_data:/volume -v \$BACKUP_DIR:/backup busybox sh -c \"cp -a /volume /backup/\"

        echo '>>> Pulling latest code and building new image'
        cd $APP_PATH
        git config pull.rebase true
        git pull origin main

        # Build and tag with timestamp
        IMAGE_TAG=$IMAGE_NAME:\$TIMESTAMP
        docker build -t \$IMAGE_TAG .
        docker tag \$IMAGE_TAG $IMAGE_NAME:latest

        # Stop and remove current containers
        docker compose down

        # Start containers with new image
        docker compose up -d --build

        echo '>>> Cleanup old backups, keeping only last 2'
        ls -dt $BACKUP_PATH/backup_* | tail -n +3 | xargs -r rm -rf
      "
  only:
    - main

rollback:
  stage: rollback
  script:
    - |
      ssh $DEPLOY_USER@$SERVER_IP "
        set -e
        if [ -z \"\$ROLLBACK_TAG\" ]; then
          echo 'ERROR: ROLLBACK_TAG variable is not set'
          exit 1
        fi

        echo '>>> Rolling back to image tag: \$ROLLBACK_TAG'
        cd $APP_PATH

        docker compose down

        docker tag $IMAGE_NAME:\$ROLLBACK_TAG $IMAGE_NAME:latest

        docker compose up -d --build
      "
  only:
    - main
  when: manual

cleanup:
  stage: cleanup
  script:
    - |
      ssh $DEPLOY_USER@$SERVER_IP "
        echo '>>> Docker cleanup: system prune and dangling volumes only'
        docker system prune -af
        docker volume prune -f
      "
  when: always
  only:
    - main
